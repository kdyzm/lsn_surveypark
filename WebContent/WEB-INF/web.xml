<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
	<!-- 通过上下文参数指定spring文件的位置，为什么tomcat会知道该位置？ -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext.xml,classpath:spring/schedual.xml</param-value>
	</context-param>
	<!-- spring上下文载入监听器，使得spring容器随着tomcat的启动而初始化 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 配置OSIV模式过滤器，该过滤器必须在struts2过滤器之前配置
		该过滤器一旦配置，就必须配置在最前面，因为它会拦截所有的流量？？
		缺点是耗费资源因为在前端页面渲染的时候Session不能关闭表示数据库连接一直打开
	 -->
	<filter>
		<filter-name>osivFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>osivFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 配置struts2过滤器 -->
	<filter>
		<filter-name>struts2filter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2filter</filter-name>
		<url-pattern>/*</url-pattern><!-- 对所有流量进行过滤 -->
	</filter-mapping>
	
	<!-- 配置spring远程调用使用的分发器 -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
  		<param-name>contextConfigLocation</param-name>
	  		<param-value>classpath:spring/applicationContext.xml</param-value>
	  	</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>*.service</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>